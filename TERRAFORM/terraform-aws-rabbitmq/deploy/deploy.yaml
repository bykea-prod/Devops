#playbook
- name: Add entries to /etc/hosts
  hosts: all
  connection: ssh
  tasks:
    - lineinfile:
        dest: /etc/hosts
        line: "{{ item.line }}"
        state: present
      with_items:
        - { line: "{{ hostvars[groups['rabbitmq'][0]].private_ip }} rabbitmaster" }
        - { line: "{{ hostvars[groups['rabbitmq'][1]].private_ip }} rabbitslave1" }
        - { line: "{{ hostvars[groups['rabbitmq'][2]].private_ip }} rabbitslave2" }


- name: Install RabbitMQ Cluster
  hosts: rabbitmq
  connection: ssh
  tasks:
  - set_fact:
      erlangVersion: 19.3.6.5
      rabbitMqVersion: 3.7.2
  - name: Install RPM packages
    yum: pkg={{ item }} state=latest
    with_items:
      - wget
      - java
      - sysstat
      - vim
      - socat
  - name: Install Erlang
    yum:
      name: https://github.com/rabbitmq/erlang-rpm/releases/download/v{{ erlangVersion }}/erlang-{{ erlangVersion }}-1.el7.centos.x86_64.rpm
      state: present
  - name: Install Rabbitmq Server
    yum:
      name: https://dl.bintray.com/rabbitmq/all/rabbitmq-server/{{ rabbitMqVersion }}/rabbitmq-server-{{ rabbitMqVersion }}-1.el7.noarch.rpm
      state: present

  - name: Change master hostname to rabbitmaster
    hostname:
      name: "rabbitmaster"
    when: rabbitmq_master is defined

  - name: Change slave1 hostname to rabbitslave1
    hostname:
      name: "rabbitslave1"
    when: rabbitslave1 is defined

  - name: Change slave2 hostname to rabbitslave2
    hostname:
      name: "rabbitslave2"
    when: rabbitslave2 is defined

  # - name: stop rabbitmq
  #   shell: rabbitmqctl stop_app
  # - name: kill rabbitmq
  #   shell: rabbitmqctl stop ; ps aux | grep rabbitmq | grep -v grep | awk '{print $2}'| xargs kill -9
  # - name: reset rabbitmq
  #   shell: rabbitmqctl reset

  - systemd:
      state: started
      daemon_reload: yes
      name: "rabbitmq-server"
  - name: Install web management
    shell: rabbitmq-plugins enable rabbitmq_management
  - systemd:
      state: restarted
      daemon_reload: yes
      name: "rabbitmq-server"
  - name: create admin/admin  profile
    shell:  rabbitmqctl add_user admin  admin
  - name: set admin tag
    shell: rabbitmqctl set_user_tags admin administrator
  - name: set admin permission
    shell: rabbitmqctl set_permissions -p "/" admin ".*" ".*" ".*"
  - name: Clear servers' Erlang cookie
    file:
      path: /var/lib/rabbitmq/.erlang.cookie
      state: absent
  - name: Copy Erlang cookie
    copy: src=erlang.cookie  dest=/var/lib/rabbitmq/.erlang.cookie  owner=rabbitmq group=rabbitmq mode=0400
  - systemd:
      state: restarted
      daemon_reload: yes
      name: "rabbitmq-server"
  - name: RabbitMQ status
    shell: rabbitmqctl cluster_status
    register: result
  - debug:
      msg: '{{ result.stdout }}'
  - name: Rabbit cluster stop slaves
    shell: rabbitmqctl stop_app
    when: rabbitmq_slave is defined
  - name: Rabbit cluster slaves join master
    shell: rabbitmqctl join_cluster rabbit@rabbitmaster
    when: rabbitmq_slave is defined
  - name: Start RabbitMQ cluster slaves
    shell: rabbitmqctl start_app
    when: rabbitmq_slave is defined
  - name: Show RabbitMQ cluster status
    shell: rabbitmqctl cluster_status
  - name: Create high availability pllicy
    shell: rabbitmqctl set_policy ha-all "^" '{"ha-mode":"exactly","ha-params":2,"ha-sync-mode":"automatic"}'
    when: rabbitmq_master is defined
  - name: Show queue list
    shell: rabbitmqctl list_queues
    register: result_queue
  - debug: msg='{{result_queue.stdout}}'
  
  
- name: List host addresses
  hosts: localhost
  become: false
  tasks:
    - debug:
        msg: "RabbitMQ brokers {{ item }}"
      with_items: "{{ groups['rabbitmq'] }}"
    - debug:
        msg: "Benchmark client {{ item }}"
      with_items: "{{ groups['client'] }}"
  
